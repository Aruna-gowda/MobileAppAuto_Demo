name: Python Appium Automation with Allure Reporting on macOS

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  setup-emulator-simulator:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Print Python version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Print pip version
        run: pip --version

      # Install Java JDK (required by Android SDK)
      - name: Install Java JDK
        run: |
          brew install --cask temurin  # Install OpenJDK from Temurin
          java -version  # Verify Java installation
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          export PATH=$PATH:$JAVA_HOME/bin
      - name: Print Java version
        run: java -version
  
      # Install Node.js (required for Appium)
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'  # Updated to Node.js 20 to avoid deprecation warnings
      - name: Print Node.js version
        run: node --version
  
      # Install Appium (Global Installation)
      - name: Install Appium
        run: |
          npm install -g appium
          npm install -g appium-doctor
      - name: Print Appium version
        run: appium --version
      - name: Install appium drivers for android
        run: sudo appium driver install uiautomator2
      - name: Install appium drivers for ios
        run: sudo appium driver install xcuitest
      

      # Android SDK setup
      - name: Install Android SDK
        run: |
          brew install --cask android-sdk
          echo "y" | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "emulator" "system-images;android-33;google_apis;x86_64"
      - name: Print Android SDK version
        run: sdkmanager --version
      
      - name: Set up and start Android Emulator
        run: |
          avdmanager create avd -n testEmulator -k "system-images;android-33;google_apis;x86_64" --device "pixel"
          nohup emulator -avd testEmulator -no-snapshot -no-window -gpu swiftshader_indirect & adb wait-for-device
          adb shell input keyevent 82
      - name: Print Android Emulator version
        run: emulator -version

      # iOS Simulator setup
      - name: Install Xcode command line tools
        run: |
          xcode-select --install
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
      - name: Print Xcode version
        run: xcodebuild -version
      
      - name: Create and boot iOS simulator
        run: |
          xcrun simctl create testSimulator com.apple.CoreSimulator.SimDeviceType.iPhone-14 com.apple.CoreSimulator.SimRuntime.iOS-16-4
          xcrun simctl boot testSimulator
