name: Appium Python Mobile Automation

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  setup-run-publish:
    runs-on: macos-latest

    env:
      # Set environment variables for Android SDK, Java, and other tools
      JAVA_HOME: /Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home
      ANDROID_HOME: ${{ runner.tool_cache }}/android-sdk
      PATH: ${{ runner.tool_cache }}/android-sdk/emulator:${{ runner.tool_cache }}/android-sdk/platform-tools:${{ runner.tool_cache }}/android-sdk/tools/bin:$PATH

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-python-commons allure-behave

      # Set up Java JDK
      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Node.js and npm
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install Appium and related tools via npm
      - name: Install Appium
        run: |
          npm install -g appium appium-doctor
          appium driver install uiautomator2
          appium driver install xcuitest
        #   npm install -g appium
        #   npm install -g appium-doctor
        #   appium-doctor --android
          
      # Set up Android SDK and emulator
      - name: Set up Android SDK
        run: |
          echo "Setting up Android SDK"
          sdkmanager --install "platform-tools" "platforms;android-30" "build-tools;30.0.3"
          sdkmanager --install "system-images;android-30;google_apis;x86_64"
          sdkmanager --licenses
          avdmanager create avd -n test_avd -k "system-images;android-30;google_apis;x86_64" --force
          emulator -avd test_avd -no-snapshot &

      # Set up Xcode simulator
      - name: Set up Xcode Simulator
        run: |
          xcode-select --install
          sudo xcodebuild -license accept
          xcrun simctl boot "iPhone 14" # Booting a simulator

      # Run Appium tests
      - name: Run Appium tests
        run: |
          appium & # Start Appium server
          python -m pytest --alluredir=allure-results # Run your tests

      # Generate and store Allure report
      - name: Allure Report Generation
        run: |
          allure generate allure-results --clean -o allure-report
        continue-on-error: true

      # Upload Allure report as an artifact
      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report
