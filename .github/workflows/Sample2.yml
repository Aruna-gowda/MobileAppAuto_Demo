name: Appium Python Mobile Automation

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  setup-run-publish:
    runs-on: macos-latest

    env:
      JAVA_HOME: /Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java JDK
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Node.js version 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-python-commons allure-behave

      # Install Appium and drivers
      - name: Install Appium and drivers
        run: |
          npm install -g appium appium-doctor
          appium driver install uiautomator2
          appium driver install xcuitest

      # Install Allure CLI
      - name: Install Allure CLI
        run: |
          brew install allure

      # Run Appium tests
      - name: Run Appium tests
        run: |
          appium & # Start Appium server
          python -m pytest --alluredir=allure-results # Run tests and store Allure results

      # Generate and store Allure report
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report
        continue-on-error: true

      # Upload Allure report as an artifact
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # Deploy Allure report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      # Add link to Allure report in workflow summary
      - name: Add link to Allure report in summary
        run: echo "Allure Report is published! View it [here](https://${{ github.repository_owner }}.github.io/${{ github.repository }}/)" >> $GITHUB_STEP_SUMMARY
