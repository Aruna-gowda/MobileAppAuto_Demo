name: Appium Python Mobile Automation

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  setup-run-publish:
    runs-on: macos-latest

    env:
      JAVA_HOME: /Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java JDK
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Node.js version 20
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-python-commons allure-behave

      # Install Appium and drivers
      - name: Install Appium and drivers
        run: |
          npm install -g appium appium-doctor
          appium driver install uiautomator2
          appium driver install xcuitest

      # Install Allure CLI
      - name: Install Allure CLI
        run: |
          brew install allure

      # Install Android SDK and Android Studio components
      - name: Install Android Studio and SDK
        run: |
          echo "Installing Android Studio and SDK..."
          brew install --cask android-studio
          echo "Installing Android SDK..."
          sdkmanager "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86_64" "emulator"
          echo "Installing AVD components..."

      # Accept licenses for SDK components
      - name: Accept SDK Licenses
        run: |
          yes | sdkmanager --licenses

      # Create and start an Android Emulator
      - name: Create and Start Android Emulator
        run: |
          echo "Creating Android Emulator..."
          echo "no" | avdmanager create avd -n test_emulator -k "system-images;android-30;google_apis;x86_64" --force
          echo "Starting the Android Emulator..."
          emulator -avd test_emulator -no-window -no-audio -no-snapshot &

      # Wait for the emulator to boot
      - name: Wait for Emulator to Boot
        run: |
          echo "Waiting for the emulator to boot..."
          adb wait-for-device
          until adb shell getprop sys.boot_completed | tr -d '\r' | grep -m 1 '1'; do
            sleep 5
          done
          echo "Emulator is ready."

      # List active Android Emulators
      - name: List Active Android Emulators
        run: |
          echo "Active Android Emulators:"
          adb devices

      # # Run Appium tests (Uncomment this block to run tests)
      # - name: Run Appium tests
      #   run: |
      #     appium & # Start Appium server
      #     sleep 5 # Wait for Appium server to start
      #     python -m pytest --alluredir=allure-results # Run tests and store Allure results

      # # Generate and store Allure report (Uncomment if needed)
      # - name: Generate Allure Report
      #   run: |
      #     allure generate allure-results --clean -o allure-report
      #   continue-on-error: true

      # # Upload Allure report as an artifact (Uncomment if needed)
      # - name: Upload Allure Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: allure-report
      #     path: allure-report

      # # Deploy Allure report to GitHub Pages (Uncomment if needed)
      # - name: Deploy Allure Report to GitHub Pages
      #   if: success()
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./allure-report

      # # Add link to Allure report in workflow summary (Uncomment if needed)
      # - name: Add link to Allure report in summary
      #   run: |
      #     REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
      #     echo "Allure Report is published here! View it [here](https://${{ github.repository_owner }}.github.io/$REPO_NAME/)" >> $GITHUB_STEP_SUMMARY
